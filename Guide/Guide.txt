*  First Enable Cloud Run API
*  Create Docker File to run Node.JS App
*  Create basic B64Decoder using Node.JS
* Enter the Below command To Create Container for this DockerFile (In Google Cloud Container Registry)
==================================================================  
gcloud builds submit --tag gcr.io/$GOOGLE_CLOUD_PROJECT/pdf-converter

* To Deploy Your Application Run:
==================================
gcloud beta run deploy pdf-converter \
  --image gcr.io/$GOOGLE_CLOUD_PROJECT/pdf-converter \
  --platform managed \
  --region us-central1 \
  --no-allow-unauthenticated

* Create the environment variable $SERVICE_URL for the app so you can easily access it:
=========================================================================================
SERVICE_URL=$(gcloud beta run services describe pdf-converter --platform managed --region us-central1 --format="value(status.url)")

echo $SERVICE_URL


* TEST *
=========
curl -X POST $SERVICE_URL
curl -X POST -H "Authorization: Bearer $(gcloud auth print-identity-token)" $SERVICE_URL


* Create 2 Buckets 1 for Uploaded File, 1 For Processed Files.
================================================================
gsutil mb gs://$GOOGLE_CLOUD_PROJECT-upload
gsutil mb gs://$GOOGLE_CLOUD_PROJECT-processed 


* Create Notification Trigger for the uploaded bucket to pubsub
================================================================
gsutil notification create -t new-doc -f json -e OBJECT_FINALIZE gs://$GOOGLE_CLOUD_PROJECT-upload


* Then create a new service account which Pub/Sub will use to trigger the Cloud Run services:
===============================================================================================
gcloud iam service-accounts create pubsub-cloud-run-invoker --display-name "PubSub Cloud Run Invoker" 

* Give the new service account permission to invoke the PDF converter service: 
===============================================================================================
gcloud beta run services add-iam-policy-binding pdf-converter --member=serviceAccount:pubsub-cloud-run-invoker@$GOOGLE_CLOUD_PROJECT.iam.gserviceaccount.com --role=roles/run.invoker --platform managed --region us-central1

PROJECT_NUMBER=[project number]


* Then enable your project to create Cloud Pub/Sub authentication tokens:
===============================================================================================
gcloud projects add-iam-policy-binding $GOOGLE_CLOUD_PROJECT --member=serviceAccount:service-$PROJECT_NUMBER@gcp-sa-pubsub.iam.gserviceaccount.com --role=roles/iam.serviceAccountTokenCreator


* Finally, create a Pub/Sub subscription so that the PDF converter can run whenever a message is published on the topic "new-doc".
===============================================================================================
gcloud beta pubsub subscriptions create pdf-conv-sub --topic new-doc --push-endpoint=$SERVICE_URL --push-auth-service-account=pubsub-cloud-run-invoker@$GOOGLE_CLOUD_PROJECT.iam.gserviceaccount.com



gcloud builds submit \
  --tag gcr.io/$GOOGLE_CLOUD_PROJECT/pdf-converter

gcloud beta run deploy pdf-converter \
  --image gcr.io/$GOOGLE_CLOUD_PROJECT/pdf-converter \
  --platform managed \
  --region us-central1 \
  --memory=2Gi \
  --no-allow-unauthenticated \
  --set-env-vars PDF_BUCKET=$GOOGLE_CLOUD_PROJECT-processed

* 
* 
* 
* 
* 
